//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Inputs/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""CharacterControls"",
            ""id"": ""cfd73428-0272-487e-b7f4-c8677bf3e3ce"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9766fd0c-1827-4e81-873d-c2f31799a93c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2465c256-d3ac-42fe-834a-f295d0e9b64f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Teclado"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a3787a0f-ad77-4699-a8aa-4b66f42319f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Teclado1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""de7b035c-4c0b-45c3-ab58-63871d341e08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Salto"",
                    ""type"": ""Button"",
                    ""id"": ""93a60333-f290-4ab4-ac1b-7d2cd47dd062"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchLeft"",
                    ""type"": ""Button"",
                    ""id"": ""287af247-f25f-49c8-bac1-0d15f9aa5fc9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchRight"",
                    ""type"": ""Button"",
                    ""id"": ""980f7529-6dd2-4d5e-b157-09244d5f7d08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TEST"",
                    ""type"": ""Button"",
                    ""id"": ""26accf40-329a-483f-95b1-3f224a6882b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TEST2"",
                    ""type"": ""Button"",
                    ""id"": ""462f8dd0-7a4b-43a4-8377-cce5701f8531"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""0ebafebf-e81c-499f-9664-52c093f97015"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchLeftKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""2b8c92ec-a7d6-4084-a459-c8c165968783"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchLeftKeyboard1"",
                    ""type"": ""Button"",
                    ""id"": ""8f8bcd81-2887-4e57-9bef-19e72cd1d663"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchRightKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""b1869027-fced-443a-b502-bd37de3544db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchRightKeyboard1"",
                    ""type"": ""Button"",
                    ""id"": ""8a0fa9b5-a7f8-44ab-8a2a-ce4761429e8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""9f35a1c6-75b1-4631-8472-e58e824ab5b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpKeyboard1"",
                    ""type"": ""Button"",
                    ""id"": ""1012ad04-1a3b-40ad-8405-1eb2647a3b23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9a9931ac-0b30-4980-8aa5-51b83f7ee50d"",
                    ""path"": ""<DualShockGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b304b5e3-c3c9-4372-b5bf-78c0e96ec8dc"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d6861cf-1732-4374-9844-312b597ff3ef"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""64584bcc-a00f-4157-bb29-a94c7960e42c"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""95747e4b-39b3-430e-86c0-bb76b99101db"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0916c53b-244f-4271-a8dc-4ebc64b937ab"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""01125379-552d-48c6-8aca-68610c864f19"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6eb2cf4c-3be1-4a91-a052-0d28760f7acc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f186029f-e4f0-4954-a911-ce5d6b6951fe"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Salto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3785019-d475-4cff-8f64-fb90203618b0"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Salto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b990cb5c-2119-4ce2-8ee1-6f2188b9a516"",
                    ""path"": ""<DualShockGamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1f1a3f0-3b79-4947-bf1f-381627000734"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef2e4483-d12b-485f-b1dd-3f3ee901110c"",
                    ""path"": ""<DualShockGamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d460623c-4e01-48b1-bb55-83e7d585034c"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4f6ba80-b0aa-4fb4-90a4-3ece518990f6"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ec0e805-3ef2-4ed7-9707-ae621dbad009"",
                    ""path"": ""<XInputController>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""292681aa-b88b-4eec-a4e1-ebeafa8b8594"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""583dc245-bf33-46d1-8beb-c828c3839210"",
                    ""path"": ""<DualShockGamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00692a8b-b422-49c9-8950-19de39cbd575"",
                    ""path"": ""<XInputController>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c604497a-4d5f-419f-8a4e-18bcd11356ea"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfc31074-870c-4138-80f6-c7d0ce2c60d7"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e58d36a1-b948-4c4f-bcca-48264020b8d1"",
                    ""path"": ""<DualShockGamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c4965f5-40ea-4ff2-ab4c-cca2c56b02c3"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b67d36d-cfa4-48fe-a986-9774cba4d1fd"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchLeftKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62e4a4cb-660f-49fa-9e01-6f8996699ae4"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchRightKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb91647a-18b4-49a8-a2b6-ae3a6b5a5625"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff845e37-a239-4566-ac99-0ef576a2cb61"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchLeftKeyboard1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcd65c1c-78b0-4767-98cf-9aa55144640f"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchRightKeyboard1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33346374-37b0-4efc-bc9b-4f6cc59c8945"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpKeyboard1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7653d639-b5ed-47df-ba70-59ab64fb86ee"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""eb907f75-e3d8-4d1a-9d7d-78bfedca3b32"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fd184545-50ff-4f49-a23b-b994e9534499"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""975a2694-6a7a-473b-b9ec-0a457b515318"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5a32a0a3-e7c5-4f7b-9db2-995e7032d143"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c4c9df80-daa3-4cf9-a448-93cc821fc7b2"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""CharacterControls1"",
            ""id"": ""9d501e3f-b2fa-4fb6-b417-3dbc1cba334f"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""00c917f5-b18d-4b7b-bde9-974e3cb22861"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Teclado"",
                    ""type"": ""Value"",
                    ""id"": ""17790518-00bd-4a9e-b359-f2d89a4da802"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Salto"",
                    ""type"": ""Button"",
                    ""id"": ""8a16aac0-b803-4474-a379-ee42285d8eae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchLeft"",
                    ""type"": ""Button"",
                    ""id"": ""848ca0b0-9876-4ac3-beef-f6c05c734fff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PunchRight"",
                    ""type"": ""Button"",
                    ""id"": ""37494c19-59c0-47c8-a370-5ebf2fddec01"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TEST"",
                    ""type"": ""Button"",
                    ""id"": ""d833b2c6-d0cb-462c-9538-17a798c66f32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TEST2"",
                    ""type"": ""Button"",
                    ""id"": ""c6a062b0-7a85-42e5-8372-50979840f019"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a23f8a19-7bd0-4dea-b7be-0f6130d3c3ef"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d40c44e9-1ddc-448c-9c0c-fdff53978ab8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""653b0f16-d8c6-4566-a9aa-980b1cf7e5e9"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""92c5c212-b132-4078-aa82-f94492399969"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b395fb4c-0967-4b3f-888a-2552f178a463"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""920b7c4c-d2d6-4c6d-9ae8-357ea6e2cfb7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a7c3eb69-0455-4690-a6fb-fa8f5aa0bf45"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teclado"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b5bd06a2-dc08-4167-b2cf-1f850e61988d"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Salto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fe447f5-5f59-4e02-8274-0b1daa50effe"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9d88c59-8b60-4512-beab-e4488a8e808e"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PunchRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12ba3cc3-630a-4e17-9e3f-9d4cf117e6c6"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""081b2f86-4919-4767-87e2-3a5ef7960fea"",
                    ""path"": ""<DualShockGamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TEST2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CharacterControls
        m_CharacterControls = asset.FindActionMap("CharacterControls", throwIfNotFound: true);
        m_CharacterControls_Movement = m_CharacterControls.FindAction("Movement", throwIfNotFound: true);
        m_CharacterControls_Movement1 = m_CharacterControls.FindAction("Movement1", throwIfNotFound: true);
        m_CharacterControls_Teclado = m_CharacterControls.FindAction("Teclado", throwIfNotFound: true);
        m_CharacterControls_Teclado1 = m_CharacterControls.FindAction("Teclado1", throwIfNotFound: true);
        m_CharacterControls_Salto = m_CharacterControls.FindAction("Salto", throwIfNotFound: true);
        m_CharacterControls_PunchLeft = m_CharacterControls.FindAction("PunchLeft", throwIfNotFound: true);
        m_CharacterControls_PunchRight = m_CharacterControls.FindAction("PunchRight", throwIfNotFound: true);
        m_CharacterControls_TEST = m_CharacterControls.FindAction("TEST", throwIfNotFound: true);
        m_CharacterControls_TEST2 = m_CharacterControls.FindAction("TEST2", throwIfNotFound: true);
        m_CharacterControls_Reset = m_CharacterControls.FindAction("Reset", throwIfNotFound: true);
        m_CharacterControls_PunchLeftKeyboard = m_CharacterControls.FindAction("PunchLeftKeyboard", throwIfNotFound: true);
        m_CharacterControls_PunchLeftKeyboard1 = m_CharacterControls.FindAction("PunchLeftKeyboard1", throwIfNotFound: true);
        m_CharacterControls_PunchRightKeyboard = m_CharacterControls.FindAction("PunchRightKeyboard", throwIfNotFound: true);
        m_CharacterControls_PunchRightKeyboard1 = m_CharacterControls.FindAction("PunchRightKeyboard1", throwIfNotFound: true);
        m_CharacterControls_JumpKeyboard = m_CharacterControls.FindAction("JumpKeyboard", throwIfNotFound: true);
        m_CharacterControls_JumpKeyboard1 = m_CharacterControls.FindAction("JumpKeyboard1", throwIfNotFound: true);
        // CharacterControls1
        m_CharacterControls1 = asset.FindActionMap("CharacterControls1", throwIfNotFound: true);
        m_CharacterControls1_Movement = m_CharacterControls1.FindAction("Movement", throwIfNotFound: true);
        m_CharacterControls1_Teclado = m_CharacterControls1.FindAction("Teclado", throwIfNotFound: true);
        m_CharacterControls1_Salto = m_CharacterControls1.FindAction("Salto", throwIfNotFound: true);
        m_CharacterControls1_PunchLeft = m_CharacterControls1.FindAction("PunchLeft", throwIfNotFound: true);
        m_CharacterControls1_PunchRight = m_CharacterControls1.FindAction("PunchRight", throwIfNotFound: true);
        m_CharacterControls1_TEST = m_CharacterControls1.FindAction("TEST", throwIfNotFound: true);
        m_CharacterControls1_TEST2 = m_CharacterControls1.FindAction("TEST2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterControls
    private readonly InputActionMap m_CharacterControls;
    private ICharacterControlsActions m_CharacterControlsActionsCallbackInterface;
    private readonly InputAction m_CharacterControls_Movement;
    private readonly InputAction m_CharacterControls_Movement1;
    private readonly InputAction m_CharacterControls_Teclado;
    private readonly InputAction m_CharacterControls_Teclado1;
    private readonly InputAction m_CharacterControls_Salto;
    private readonly InputAction m_CharacterControls_PunchLeft;
    private readonly InputAction m_CharacterControls_PunchRight;
    private readonly InputAction m_CharacterControls_TEST;
    private readonly InputAction m_CharacterControls_TEST2;
    private readonly InputAction m_CharacterControls_Reset;
    private readonly InputAction m_CharacterControls_PunchLeftKeyboard;
    private readonly InputAction m_CharacterControls_PunchLeftKeyboard1;
    private readonly InputAction m_CharacterControls_PunchRightKeyboard;
    private readonly InputAction m_CharacterControls_PunchRightKeyboard1;
    private readonly InputAction m_CharacterControls_JumpKeyboard;
    private readonly InputAction m_CharacterControls_JumpKeyboard1;
    public struct CharacterControlsActions
    {
        private @PlayerInput m_Wrapper;
        public CharacterControlsActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_CharacterControls_Movement;
        public InputAction @Movement1 => m_Wrapper.m_CharacterControls_Movement1;
        public InputAction @Teclado => m_Wrapper.m_CharacterControls_Teclado;
        public InputAction @Teclado1 => m_Wrapper.m_CharacterControls_Teclado1;
        public InputAction @Salto => m_Wrapper.m_CharacterControls_Salto;
        public InputAction @PunchLeft => m_Wrapper.m_CharacterControls_PunchLeft;
        public InputAction @PunchRight => m_Wrapper.m_CharacterControls_PunchRight;
        public InputAction @TEST => m_Wrapper.m_CharacterControls_TEST;
        public InputAction @TEST2 => m_Wrapper.m_CharacterControls_TEST2;
        public InputAction @Reset => m_Wrapper.m_CharacterControls_Reset;
        public InputAction @PunchLeftKeyboard => m_Wrapper.m_CharacterControls_PunchLeftKeyboard;
        public InputAction @PunchLeftKeyboard1 => m_Wrapper.m_CharacterControls_PunchLeftKeyboard1;
        public InputAction @PunchRightKeyboard => m_Wrapper.m_CharacterControls_PunchRightKeyboard;
        public InputAction @PunchRightKeyboard1 => m_Wrapper.m_CharacterControls_PunchRightKeyboard1;
        public InputAction @JumpKeyboard => m_Wrapper.m_CharacterControls_JumpKeyboard;
        public InputAction @JumpKeyboard1 => m_Wrapper.m_CharacterControls_JumpKeyboard1;
        public InputActionMap Get() { return m_Wrapper.m_CharacterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterControlsActions instance)
        {
            if (m_Wrapper.m_CharacterControlsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement;
                @Movement1.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement1;
                @Movement1.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement1;
                @Movement1.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement1;
                @Teclado.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTeclado;
                @Teclado.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTeclado;
                @Teclado.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTeclado;
                @Teclado1.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTeclado1;
                @Teclado1.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTeclado1;
                @Teclado1.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTeclado1;
                @Salto.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSalto;
                @Salto.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSalto;
                @Salto.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSalto;
                @PunchLeft.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeft;
                @PunchLeft.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeft;
                @PunchLeft.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeft;
                @PunchRight.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRight;
                @PunchRight.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRight;
                @PunchRight.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRight;
                @TEST.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTEST;
                @TEST.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTEST;
                @TEST.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTEST;
                @TEST2.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTEST2;
                @TEST2.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTEST2;
                @TEST2.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnTEST2;
                @Reset.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnReset;
                @PunchLeftKeyboard.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeftKeyboard;
                @PunchLeftKeyboard.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeftKeyboard;
                @PunchLeftKeyboard.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeftKeyboard;
                @PunchLeftKeyboard1.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeftKeyboard1;
                @PunchLeftKeyboard1.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeftKeyboard1;
                @PunchLeftKeyboard1.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchLeftKeyboard1;
                @PunchRightKeyboard.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRightKeyboard;
                @PunchRightKeyboard.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRightKeyboard;
                @PunchRightKeyboard.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRightKeyboard;
                @PunchRightKeyboard1.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRightKeyboard1;
                @PunchRightKeyboard1.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRightKeyboard1;
                @PunchRightKeyboard1.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnPunchRightKeyboard1;
                @JumpKeyboard.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJumpKeyboard;
                @JumpKeyboard.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJumpKeyboard;
                @JumpKeyboard.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJumpKeyboard;
                @JumpKeyboard1.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJumpKeyboard1;
                @JumpKeyboard1.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJumpKeyboard1;
                @JumpKeyboard1.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJumpKeyboard1;
            }
            m_Wrapper.m_CharacterControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Movement1.started += instance.OnMovement1;
                @Movement1.performed += instance.OnMovement1;
                @Movement1.canceled += instance.OnMovement1;
                @Teclado.started += instance.OnTeclado;
                @Teclado.performed += instance.OnTeclado;
                @Teclado.canceled += instance.OnTeclado;
                @Teclado1.started += instance.OnTeclado1;
                @Teclado1.performed += instance.OnTeclado1;
                @Teclado1.canceled += instance.OnTeclado1;
                @Salto.started += instance.OnSalto;
                @Salto.performed += instance.OnSalto;
                @Salto.canceled += instance.OnSalto;
                @PunchLeft.started += instance.OnPunchLeft;
                @PunchLeft.performed += instance.OnPunchLeft;
                @PunchLeft.canceled += instance.OnPunchLeft;
                @PunchRight.started += instance.OnPunchRight;
                @PunchRight.performed += instance.OnPunchRight;
                @PunchRight.canceled += instance.OnPunchRight;
                @TEST.started += instance.OnTEST;
                @TEST.performed += instance.OnTEST;
                @TEST.canceled += instance.OnTEST;
                @TEST2.started += instance.OnTEST2;
                @TEST2.performed += instance.OnTEST2;
                @TEST2.canceled += instance.OnTEST2;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
                @PunchLeftKeyboard.started += instance.OnPunchLeftKeyboard;
                @PunchLeftKeyboard.performed += instance.OnPunchLeftKeyboard;
                @PunchLeftKeyboard.canceled += instance.OnPunchLeftKeyboard;
                @PunchLeftKeyboard1.started += instance.OnPunchLeftKeyboard1;
                @PunchLeftKeyboard1.performed += instance.OnPunchLeftKeyboard1;
                @PunchLeftKeyboard1.canceled += instance.OnPunchLeftKeyboard1;
                @PunchRightKeyboard.started += instance.OnPunchRightKeyboard;
                @PunchRightKeyboard.performed += instance.OnPunchRightKeyboard;
                @PunchRightKeyboard.canceled += instance.OnPunchRightKeyboard;
                @PunchRightKeyboard1.started += instance.OnPunchRightKeyboard1;
                @PunchRightKeyboard1.performed += instance.OnPunchRightKeyboard1;
                @PunchRightKeyboard1.canceled += instance.OnPunchRightKeyboard1;
                @JumpKeyboard.started += instance.OnJumpKeyboard;
                @JumpKeyboard.performed += instance.OnJumpKeyboard;
                @JumpKeyboard.canceled += instance.OnJumpKeyboard;
                @JumpKeyboard1.started += instance.OnJumpKeyboard1;
                @JumpKeyboard1.performed += instance.OnJumpKeyboard1;
                @JumpKeyboard1.canceled += instance.OnJumpKeyboard1;
            }
        }
    }
    public CharacterControlsActions @CharacterControls => new CharacterControlsActions(this);

    // CharacterControls1
    private readonly InputActionMap m_CharacterControls1;
    private ICharacterControls1Actions m_CharacterControls1ActionsCallbackInterface;
    private readonly InputAction m_CharacterControls1_Movement;
    private readonly InputAction m_CharacterControls1_Teclado;
    private readonly InputAction m_CharacterControls1_Salto;
    private readonly InputAction m_CharacterControls1_PunchLeft;
    private readonly InputAction m_CharacterControls1_PunchRight;
    private readonly InputAction m_CharacterControls1_TEST;
    private readonly InputAction m_CharacterControls1_TEST2;
    public struct CharacterControls1Actions
    {
        private @PlayerInput m_Wrapper;
        public CharacterControls1Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_CharacterControls1_Movement;
        public InputAction @Teclado => m_Wrapper.m_CharacterControls1_Teclado;
        public InputAction @Salto => m_Wrapper.m_CharacterControls1_Salto;
        public InputAction @PunchLeft => m_Wrapper.m_CharacterControls1_PunchLeft;
        public InputAction @PunchRight => m_Wrapper.m_CharacterControls1_PunchRight;
        public InputAction @TEST => m_Wrapper.m_CharacterControls1_TEST;
        public InputAction @TEST2 => m_Wrapper.m_CharacterControls1_TEST2;
        public InputActionMap Get() { return m_Wrapper.m_CharacterControls1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterControls1Actions set) { return set.Get(); }
        public void SetCallbacks(ICharacterControls1Actions instance)
        {
            if (m_Wrapper.m_CharacterControls1ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnMovement;
                @Teclado.started -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTeclado;
                @Teclado.performed -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTeclado;
                @Teclado.canceled -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTeclado;
                @Salto.started -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnSalto;
                @Salto.performed -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnSalto;
                @Salto.canceled -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnSalto;
                @PunchLeft.started -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnPunchLeft;
                @PunchLeft.performed -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnPunchLeft;
                @PunchLeft.canceled -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnPunchLeft;
                @PunchRight.started -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnPunchRight;
                @PunchRight.performed -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnPunchRight;
                @PunchRight.canceled -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnPunchRight;
                @TEST.started -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTEST;
                @TEST.performed -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTEST;
                @TEST.canceled -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTEST;
                @TEST2.started -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTEST2;
                @TEST2.performed -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTEST2;
                @TEST2.canceled -= m_Wrapper.m_CharacterControls1ActionsCallbackInterface.OnTEST2;
            }
            m_Wrapper.m_CharacterControls1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Teclado.started += instance.OnTeclado;
                @Teclado.performed += instance.OnTeclado;
                @Teclado.canceled += instance.OnTeclado;
                @Salto.started += instance.OnSalto;
                @Salto.performed += instance.OnSalto;
                @Salto.canceled += instance.OnSalto;
                @PunchLeft.started += instance.OnPunchLeft;
                @PunchLeft.performed += instance.OnPunchLeft;
                @PunchLeft.canceled += instance.OnPunchLeft;
                @PunchRight.started += instance.OnPunchRight;
                @PunchRight.performed += instance.OnPunchRight;
                @PunchRight.canceled += instance.OnPunchRight;
                @TEST.started += instance.OnTEST;
                @TEST.performed += instance.OnTEST;
                @TEST.canceled += instance.OnTEST;
                @TEST2.started += instance.OnTEST2;
                @TEST2.performed += instance.OnTEST2;
                @TEST2.canceled += instance.OnTEST2;
            }
        }
    }
    public CharacterControls1Actions @CharacterControls1 => new CharacterControls1Actions(this);
    public interface ICharacterControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMovement1(InputAction.CallbackContext context);
        void OnTeclado(InputAction.CallbackContext context);
        void OnTeclado1(InputAction.CallbackContext context);
        void OnSalto(InputAction.CallbackContext context);
        void OnPunchLeft(InputAction.CallbackContext context);
        void OnPunchRight(InputAction.CallbackContext context);
        void OnTEST(InputAction.CallbackContext context);
        void OnTEST2(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
        void OnPunchLeftKeyboard(InputAction.CallbackContext context);
        void OnPunchLeftKeyboard1(InputAction.CallbackContext context);
        void OnPunchRightKeyboard(InputAction.CallbackContext context);
        void OnPunchRightKeyboard1(InputAction.CallbackContext context);
        void OnJumpKeyboard(InputAction.CallbackContext context);
        void OnJumpKeyboard1(InputAction.CallbackContext context);
    }
    public interface ICharacterControls1Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnTeclado(InputAction.CallbackContext context);
        void OnSalto(InputAction.CallbackContext context);
        void OnPunchLeft(InputAction.CallbackContext context);
        void OnPunchRight(InputAction.CallbackContext context);
        void OnTEST(InputAction.CallbackContext context);
        void OnTEST2(InputAction.CallbackContext context);
    }
}
